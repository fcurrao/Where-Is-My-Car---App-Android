{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { realtime_database_url } from \"../Database/firebaseConfig\";\nexport var shopApi = createApi({\n  reducerPath: 'shopApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: realtime_database_url\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getCategories: builder.query({\n        query: function query() {\n          return \"categories.json\";\n        }\n      }),\n      getProducts: builder.query({\n        query: function query() {\n          return \"products.json\";\n        }\n      }),\n      getProductsByCategory: builder.query({\n        query: function query(category) {\n          return \"products.json?orderBy=\\\"category\\\"&equalTo=\\\"\" + category + \"\\\"\";\n        },\n        transformResponse: function transformResponse(response) {\n          var productsTransformed = Object.values(response);\n          return productsTransformed;\n        }\n      }),\n      getProductById: builder.query({\n        query: function query(productId) {\n          return \"products.json?orderBy=\\\"id\\\"&equalTo=\" + productId;\n        },\n        transformResponse: function transformResponse(response) {\n          var productTransformed = Object.values(response).pop();\n          return productTransformed;\n        }\n      }),\n      postCart: builder.mutation({\n        query: function query(order) {\n          return {\n            url: \"orders.json\",\n            method: \"POST\",\n            body: order\n          };\n        }\n      }),\n      getOrder: builder.query({\n        query: function query() {\n          return \"orders.json\";\n        }\n      }),\n      getProfileImage: builder.query({\n        query: function query(localId) {\n          return \"profileImages/\" + localId + \".json\";\n        }\n      }),\n      postProfileImage: builder.mutation({\n        query: function query(_ref) {\n          var image = _ref.image,\n            localId = _ref.localId;\n          return {\n            url: \"profileImages/\" + localId + \".json\",\n            method: \"PUT\",\n            body: {\n              image: image\n            }\n          };\n        }\n      }),\n      getUserLocation: builder.query({\n        query: function query(localId) {\n          return \"locations/\" + localId + \".json\";\n        }\n      }),\n      getUserLocation2: builder.query({\n        query: function query(localId) {\n          return \"locations2/\" + localId + \".json\";\n        }\n      }),\n      postUserLocation: builder.mutation({\n        query: function query(_ref2) {\n          var location = _ref2.location,\n            localId = _ref2.localId;\n          return {\n            url: \"locations/\" + localId + \".json\",\n            method: \"PUT\",\n            body: {\n              latitude: location.latitude,\n              longitude: location.longitude,\n              address: location.address,\n              inputtextoa: location.inputtextoa,\n              inputtextob: location.inputtextob\n            }\n          };\n        }\n      }),\n      postUserLocation2: builder.mutation({\n        query: function query(_ref3) {\n          var location = _ref3.location,\n            localId = _ref3.localId;\n          return {\n            url: \"locations2/\" + localId + \".json\",\n            method: \"PUT\",\n            body: {\n              latitude: location.latitude,\n              longitude: location.longitude,\n              address: location.address,\n              inputtextoa: location.inputtextoa,\n              inputtextob: location.inputtextob\n            }\n          };\n        }\n      })\n    };\n  }\n});\nvar useGetCategoriesQuery = shopApi.useGetCategoriesQuery,\n  useGetProductsQuery = shopApi.useGetProductsQuery,\n  useGetProductsByCategoryQuery = shopApi.useGetProductsByCategoryQuery,\n  useGetProductByIdQuery = shopApi.useGetProductByIdQuery,\n  usePostCartMutation = shopApi.usePostCartMutation,\n  useGetOrderQuery = shopApi.useGetOrderQuery,\n  useGetProfileImageQuery = shopApi.useGetProfileImageQuery,\n  usePostProfileImageMutation = shopApi.usePostProfileImageMutation,\n  useGetUserLocationQuery = shopApi.useGetUserLocationQuery,\n  useGetUserLocation2Query = shopApi.useGetUserLocation2Query,\n  usePostUserLocationMutation = shopApi.usePostUserLocationMutation,\n  usePostUserLocation2Mutation = shopApi.usePostUserLocation2Mutation;\nexport { useGetCategoriesQuery, useGetProductsQuery, useGetProductsByCategoryQuery, useGetProductByIdQuery, usePostCartMutation, useGetOrderQuery, useGetProfileImageQuery, usePostProfileImageMutation, useGetUserLocationQuery, useGetUserLocation2Query, usePostUserLocationMutation, usePostUserLocation2Mutation };","map":{"version":3,"names":["createApi","fetchBaseQuery","realtime_database_url","shopApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getCategories","query","getProducts","getProductsByCategory","category","transformResponse","response","productsTransformed","Object","values","getProductById","productId","productTransformed","pop","postCart","mutation","order","url","method","body","getOrder","getProfileImage","localId","postProfileImage","_ref","image","getUserLocation","getUserLocation2","postUserLocation","_ref2","location","latitude","longitude","address","inputtextoa","inputtextob","postUserLocation2","_ref3","useGetCategoriesQuery","useGetProductsQuery","useGetProductsByCategoryQuery","useGetProductByIdQuery","usePostCartMutation","useGetOrderQuery","useGetProfileImageQuery","usePostProfileImageMutation","useGetUserLocationQuery","useGetUserLocation2Query","usePostUserLocationMutation","usePostUserLocation2Mutation"],"sources":["C:/Users/federico.currao/Desktop/OtrosFC/mycar/Where-Is-My-Car---App-Android/src/Services/shopServices.js"],"sourcesContent":["import {createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"\r\nimport { realtime_database_url } from \"../Database/firebaseConfig\"\r\n\r\nexport const shopApi = createApi({\r\n    reducerPath: 'shopApi',\r\n    baseQuery: fetchBaseQuery({baseUrl: realtime_database_url}),\r\n    endpoints: (builder) => ({\r\n        getCategories: builder.query({\r\n            query: () => `categories.json`\r\n        }),\r\n        getProducts: builder.query({\r\n            query: () => `products.json`\r\n        }),\r\n        getProductsByCategory: builder.query({\r\n            query: (category) => `products.json?orderBy=\"category\"&equalTo=\"${category}\"`,\r\n            transformResponse: (response) => {\r\n                const productsTransformed = Object.values(response)\r\n                return (productsTransformed)\r\n            }\r\n        }),\r\n        getProductById: builder.query({\r\n            query: (productId) => `products.json?orderBy=\"id\"&equalTo=${productId}`,\r\n            transformResponse: (response) => {\r\n                const productTransformed = Object.values(response).pop()\r\n                return (productTransformed)\r\n            }\r\n        }),\r\n        postCart: builder.mutation({\r\n            query: (order) => ({\r\n                url: `orders.json`,\r\n                method: `POST`,\r\n                body: order\r\n            })\r\n        }),\r\n        getOrder: builder.query({\r\n            query: () => `orders.json`\r\n        }),\r\n        getProfileImage: builder.query({\r\n            query: (localId) => `profileImages/${localId}.json`,\r\n        }),\r\n        postProfileImage: builder.mutation({\r\n            query: ({image, localId}) => ({\r\n                url: `profileImages/${localId}.json`,\r\n                method: \"PUT\",\r\n                body: {\r\n                    image: image\r\n                },\r\n            }),\r\n        }),\r\n        getUserLocation: builder.query({\r\n            query: (localId) => `locations/${localId}.json`,\r\n        }),\r\n        getUserLocation2: builder.query({\r\n            query: (localId) => `locations2/${localId}.json`,\r\n        }),\r\n        postUserLocation: builder.mutation({\r\n            query: ({location, localId}) => ({\r\n                url: `locations/${localId}.json`,\r\n                method: \"PUT\",\r\n                body: {\r\n                    latitude: location.latitude,\r\n                    longitude: location.longitude,\r\n                    address: location.address,\r\n                    inputtextoa: location.inputtextoa,\r\n                    inputtextob: location.inputtextob,\r\n\r\n                }\r\n            })\r\n        }),\r\n        postUserLocation2: builder.mutation({\r\n            query: ({location, localId}) => ({\r\n                url: `locations2/${localId}.json`,\r\n                method: \"PUT\",\r\n                body: {\r\n                    latitude: location.latitude,\r\n                    longitude: location.longitude,\r\n                    address: location.address,\r\n                    inputtextoa: location.inputtextoa,\r\n                    inputtextob: location.inputtextob,\r\n                }\r\n            })\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCategoriesQuery, \r\n    useGetProductsQuery, \r\n    useGetProductsByCategoryQuery,\r\n    useGetProductByIdQuery,\r\n    usePostCartMutation,\r\n    useGetOrderQuery,\r\n    useGetProfileImageQuery,\r\n    usePostProfileImageMutation,\r\n    useGetUserLocationQuery,\r\n    useGetUserLocation2Query,\r\n    usePostUserLocationMutation,\r\n    usePostUserLocation2Mutation,\r\n} = shopApi\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}