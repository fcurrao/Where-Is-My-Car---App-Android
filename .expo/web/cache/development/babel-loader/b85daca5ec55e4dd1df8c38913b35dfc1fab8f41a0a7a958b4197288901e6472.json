{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ShopStack from \"./ShopStack\";\nimport CartStack from \"./CartStack\";\nimport ListAddress from \"../Screens/ListAddress\";\nimport ListAddress2 from \"../Screens/ListAddress2\";\nimport MyProfile from \"../Screens/MyProfile\";\nimport LocationSelector from \"../Screens/LocationSelector\";\nimport ImageSelector from \"../Screens/ImageSelector\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { colors } from \"../Global/Colors\";\nimport { Ionicons, Entypo, MaterialCommunityIcons, AntDesign, FontAwesome, FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\nimport OrderStack from \"./OrderStack\";\nimport AuthStack from \"./AuthStack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MyProfileStack from \"./MyProfileStack\";\nimport { getSession } from \"../SQLite\";\nimport InicialStack from \"./InicialStack\";\nimport { setUser } from \"../features/User/userSlice\";\nimport Home from \"../Screens/Home\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Navigator = function Navigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.userReducer.value;\n    }),\n    email = _useSelector.email,\n    localId = _useSelector.localId;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      try {\n        console.log('Getting session...');\n        var session = yield getSession();\n        console.log('Sesion: ');\n        console.log(session);\n        if (session != null && session.rows.length) {\n          var user = session.rows._array[0];\n          dispatch(setUser(user));\n        }\n      } catch (error) {\n        console.log('Error getting session');\n        console.log(error.message);\n      }\n    })();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(NavigationContainer, {\n      children: email ? _jsxs(_Fragment, {\n        children: [_jsx(\"button\", {\n          children: \"close\"\n        }), _jsxs(Tab.Navigator, {\n          screenOptions: {\n            headerShown: false,\n            tabBarShowLabel: false,\n            tabBarStyle: styles.tabBar\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"MyProfile\",\n            component: MyProfileStack,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused;\n                return _jsx(View, {\n                  style: styles.item,\n                  children: _jsx(Ionicons, {\n                    name: \"person-circle-outline\",\n                    size: focused ? 54 : 34,\n                    color: focused ? colors.color5 : colors.colorgris\n                  })\n                });\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"ListAddress\",\n            component: ListAddress,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref3) {\n                var focused = _ref3.focused;\n                return _jsx(View, {\n                  style: styles.item,\n                  children: _jsx(AntDesign, {\n                    name: \"car\",\n                    size: focused ? 54 : 34,\n                    color: focused ? colors.color5 : colors.colorgris\n                  })\n                });\n              }\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"ListAddress2\",\n            component: ListAddress2,\n            options: {\n              tabBarIcon: function tabBarIcon(_ref4) {\n                var focused = _ref4.focused;\n                return _jsx(View, {\n                  style: styles.item,\n                  children: _jsx(FontAwesome5, {\n                    name: \"motorcycle\",\n                    size: focused ? 54 : 34,\n                    color: focused ? colors.color5 : colors.colorgris\n                  })\n                });\n              }\n            }\n          })]\n        })]\n      }) : _jsx(AuthStack, {})\n    })\n  });\n};\nexport default Navigator;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 5,\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  },\n  tabBar: {\n    backgroundColor: colors.colorblanco,\n    shadowColor: \"black\",\n    height: 60\n  }\n});","map":{"version":3,"names":["React","useEffect","NavigationContainer","StatusBar","ShopStack","CartStack","ListAddress","ListAddress2","MyProfile","LocationSelector","ImageSelector","createBottomTabNavigator","colors","Ionicons","Entypo","MaterialCommunityIcons","AntDesign","FontAwesome","FontAwesome5","MaterialIcons","OrderStack","AuthStack","useDispatch","useSelector","MyProfileStack","getSession","InicialStack","setUser","Home","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Navigator","_useSelector","state","userReducer","value","email","localId","dispatch","_asyncToGenerator","console","log","session","rows","length","user","_array","error","message","SafeAreaView","style","styles","container","children","screenOptions","headerShown","tabBarShowLabel","tabBarStyle","tabBar","Screen","name","component","options","tabBarIcon","_ref2","focused","View","item","size","color","color5","colorgris","_ref3","_ref4","StyleSheet","create","flex","marginBottom","paddingTop","Platform","OS","currentHeight","backgroundColor","colorblanco","shadowColor","height"],"sources":["C:/Users/federico.currao/Desktop/OtrosFC/mycar/Where-Is-My-Car---App-Android/src/Navigation/Navigator.jsx"],"sourcesContent":["import {\r\n    Platform,\r\n    Pressable,\r\n    SafeAreaView,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n} from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { StatusBar } from \"react-native\";\r\nimport ShopStack from \"./ShopStack\";\r\nimport CartStack from \"./CartStack\";\r\n\r\nimport ListAddress from \"../Screens/ListAddress\";\r\nimport ListAddress2 from \"../Screens/ListAddress2\";\r\nimport MyProfile from \"../Screens/MyProfile\";\r\nimport LocationSelector from \"../Screens/LocationSelector\";\r\nimport ImageSelector from \"../Screens/ImageSelector\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { colors } from \"../Global/Colors\";\r\nimport {\r\n    Ionicons,\r\n    Entypo,\r\n    MaterialCommunityIcons,\r\n    AntDesign,\r\n    FontAwesome,\r\n    FontAwesome5,\r\n    MaterialIcons, \r\n\r\n} from \"@expo/vector-icons\";\r\nimport OrderStack from \"./OrderStack\";\r\nimport AuthStack from \"./AuthStack\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MyProfileStack from \"./MyProfileStack\";\r\nimport { getSession } from \"../SQLite\";\r\nimport InicialStack from './InicialStack'\r\nimport { setUser } from \"../features/User/userSlice\";\r\nimport Home from \"../Screens/Home\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst Navigator = () => {\r\n     const { email, localId } = useSelector((state) => state.userReducer.value); \r\n    // let email = 'f@f.com'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                console.log('Getting session...');\r\n                const session = await getSession()\r\n                console.log('Sesion: ');\r\n                console.log(session);\r\n                if (session?.rows.length) {\r\n                    const user = session.rows._array[0]\r\n                    dispatch(setUser(user))\r\n                }\r\n            } catch (error) {\r\n                console.log('Error getting session');\r\n                console.log(error.message);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <NavigationContainer>\r\n                {email ? (\r\n                    <>\r\n                    <button>close</button>\r\n                    <Tab.Navigator\r\n                        screenOptions={{\r\n                            headerShown: false,\r\n                            tabBarShowLabel: false,\r\n                            tabBarStyle: styles.tabBar,\r\n                        }}\r\n                    >\r\n                       \r\n\r\n                      <Tab.Screen\r\n                            name=\"MyProfile\"\r\n                            component={MyProfileStack}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View style={styles.item}>\r\n                                            <Ionicons\r\n                                                name=\"person-circle-outline\"\r\n                                                size={\r\n                                                    focused ? 54 : 34\r\n                                                }\r\n                                                color={\r\n                                                    focused ? colors.color5 : colors.colorgris\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n\r\n<Tab.Screen\r\n                            name=\"ListAddress\"\r\n                            component={ListAddress}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View style={styles.item}>\r\n                                           <AntDesign  \r\n                                                name=\"car\"\r\n                                                size={\r\n                                                    focused ? 54 : 34\r\n                                                }\r\n                                                color={\r\n                                                    focused ? colors.color5 : colors.colorgris\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n\r\n<Tab.Screen\r\n                            name=\"ListAddress2\"\r\n                            component={ListAddress2}\r\n                            options={{\r\n                                tabBarIcon: ({ focused }) => {\r\n                                    return (\r\n                                        <View style={styles.item}>\r\n                                           <FontAwesome5  \r\n                                                name=\"motorcycle\"\r\n                                                size={\r\n                                                    focused ? 54 : 34\r\n                                                }\r\n                                                color={\r\n                                                    focused ? colors.color5 : colors.colorgris\r\n                                                }\r\n                                            />\r\n                                        </View>\r\n                                    );\r\n                                },\r\n                            }}\r\n                        />\r\n\r\n\r\n\r\n\r\n                    </Tab.Navigator>\r\n                    </>\r\n                ) : (\r\n                    <AuthStack />\r\n                )}\r\n            </NavigationContainer>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default Navigator;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginBottom: 5,\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n    },\r\n    tabBar: {\r\n        backgroundColor: colors.colorblanco,\r\n        shadowColor: \"black\",\r\n        height: 60,\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}