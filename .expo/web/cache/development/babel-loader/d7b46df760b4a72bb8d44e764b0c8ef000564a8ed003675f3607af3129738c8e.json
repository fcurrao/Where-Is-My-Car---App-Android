{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddButton from \"../Components/AddButton\";\nimport AddressItem from \"../Components/AddressItem\";\nimport { useGetUserLocation2Query } from \"../Services/shopServices\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListAddress2 = function ListAddress2(_ref) {\n  var navigation = _ref.navigation;\n  var _useSelector = useSelector(function (state) {\n      return state.userReducer.value;\n    }),\n    location2 = _useSelector.location2,\n    localId = _useSelector.localId;\n  var _useGetUserLocation2Q = useGetUserLocation2Query(localId),\n    userLocationQuery = _useGetUserLocation2Q.data,\n    isError = _useGetUserLocation2Q.isError,\n    isLoading = _useGetUserLocation2Q.isLoading;\n  return location2 != null && location2.latitude || userLocationQuery ? _jsx(AddressItem, {\n    location: location2 != null && location2.latitude ? location : userLocationQuery,\n    navigation: navigation\n  }) : _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"No location set\"\n    }), _jsx(AddButton, {\n      title: \"Set location\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Location Selector 2\");\n      }\n    })]\n  });\n};\nexport default ListAddress2;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  text: {\n    paddingVertical: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  },\n  text2: {\n    paddingLeft: \"45%\",\n    paddingVertical: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useSelector","AddButton","AddressItem","useGetUserLocation2Query","jsx","_jsx","jsxs","_jsxs","ListAddress2","_ref","navigation","_useSelector","state","userReducer","value","location2","localId","_useGetUserLocation2Q","userLocationQuery","data","isError","isLoading","latitude","location","View","style","styles","container","children","Text","text","title","onPress","navigate","StyleSheet","create","justifyContent","alignItems","paddingVertical","fontFamily","fontSize","text2","paddingLeft"],"sources":["C:/Users/federico.currao/Desktop/OtrosFC/mycar/Where-Is-My-Car---App-Android/src/Screens/ListAddress2.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport AddressItem from '../Components/AddressItem'\r\nimport { useGetUserLocation2Query } from \"../Services/shopServices\";\r\n\r\nconst ListAddress2 = ({ navigation }) => {\r\n    const { location2, localId } = useSelector((state) => state.userReducer.value);\r\n    const {data:userLocationQuery, isError, isLoading} = useGetUserLocation2Query(localId)\r\n  \r\n \r\n    return location2?.latitude || userLocationQuery ? (\r\n         <AddressItem \r\n        location={location2?.latitude ? location: userLocationQuery}\r\n        navigation={navigation} /> \r\n    ) : (\r\n        <View style = {styles.container}> \r\n             <Text style={styles.text}>No location set</Text>\r\n            <AddButton\r\n                title=\"Set location\"\r\n                onPress={() => navigation.navigate(\"Location Selector 2\")}\r\n            />\r\n        </View>\r\n    );\r\n  \r\n};\r\n\r\nexport default ListAddress2;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        paddingVertical: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    },\r\n    text2: {\r\n        paddingLeft: \"45%\",\r\n        paddingVertical: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    }\r\n});"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,SAASC,wBAAwB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAAC,YAAA,GAA+BX,WAAW,CAAC,UAACY,KAAK;MAAA,OAAKA,KAAK,CAACC,WAAW,CAACC,KAAK;IAAA,EAAC;IAAtEC,SAAS,GAAAJ,YAAA,CAATI,SAAS;IAAEC,OAAO,GAAAL,YAAA,CAAPK,OAAO;EAC1B,IAAAC,qBAAA,GAAqDd,wBAAwB,CAACa,OAAO,CAAC;IAA1EE,iBAAiB,GAAAD,qBAAA,CAAtBE,IAAI;IAAoBC,OAAO,GAAAH,qBAAA,CAAPG,OAAO;IAAEC,SAAS,GAAAJ,qBAAA,CAATI,SAAS;EAGjD,OAAON,SAAS,YAATA,SAAS,CAAEO,QAAQ,IAAIJ,iBAAiB,GAC1Cb,IAAA,CAACH,WAAW;IACbqB,QAAQ,EAAER,SAAS,YAATA,SAAS,CAAEO,QAAQ,GAAGC,QAAQ,GAAEL,iBAAkB;IAC5DR,UAAU,EAAEA;EAAW,CAAE,CAAC,GAE1BH,KAAA,CAACiB,IAAI;IAACC,KAAK,EAAIC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC3BvB,IAAA,CAACwB,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,IAAK;MAAAF,QAAA,EAAC;IAAe,CAAM,CAAC,EACjDvB,IAAA,CAACJ,SAAS;MACN8B,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMtB,UAAU,CAACuB,QAAQ,CAAC,qBAAqB,CAAC;MAAA;IAAC,CAC7D,CAAC;EAAA,CACA,CACT;AAEL,CAAC;AAED,eAAezB,YAAY;AAE3B,IAAMkB,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE;EAChB,CAAC;EACDP,IAAI,EAAE;IACFQ,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IACHC,WAAW,EAAE,KAAK;IAClBJ,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}