{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddButton from \"../Components/AddButton\";\nimport AddressItem from \"../Components/AddressItem\";\nimport { useGetUserLocationQuery } from \"../Services/shopServices\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListAddress = function ListAddress(_ref) {\n  var navigation = _ref.navigation;\n  var _useSelector = useSelector(function (state) {\n      return state.userReducer.value;\n    }),\n    location = _useSelector.location,\n    localId = _useSelector.localId;\n  var _useGetUserLocationQu = useGetUserLocationQuery(localId),\n    userLocationQuery = _useGetUserLocationQu.data,\n    isError = _useGetUserLocationQu.isError,\n    isLoading = _useGetUserLocationQu.isLoading;\n  useEffect(function () {\n    console.log(userLocationQuery);\n  }, []);\n  return location != null && location.latitude || userLocationQuery ? _jsx(AddressItem, {\n    location: location != null && location.latitude ? location : userLocationQuery,\n    navigation: navigation\n  }) : _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"No location set\"\n    }), _jsx(AddButton, {\n      title: \"Set location\",\n      onPress: function onPress() {\n        return navigation.navigate(\"Location Selector\");\n      }\n    })]\n  });\n};\nexport default ListAddress;\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  text: {\n    paddingVertical: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  },\n  text2: {\n    paddingLeft: \"45%\",\n    paddingVertical: 20,\n    fontFamily: 'Josefin',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","useSelector","AddButton","AddressItem","useGetUserLocationQuery","jsx","_jsx","jsxs","_jsxs","ListAddress","_ref","navigation","_useSelector","state","userReducer","value","location","localId","_useGetUserLocationQu","userLocationQuery","data","isError","isLoading","useEffect","console","log","latitude","View","style","styles","container","children","Text","text","title","onPress","navigate","StyleSheet","create","justifyContent","alignItems","paddingVertical","fontFamily","fontSize","text2","paddingLeft"],"sources":["C:/Users/federico.currao/Desktop/OtrosFC/mycar/Where-Is-My-Car---App-Android/src/Screens/ListAddress.jsx"],"sourcesContent":["import { StyleSheet, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddButton from \"../Components/AddButton\";\r\nimport AddressItem from '../Components/AddressItem'\r\nimport { useGetUserLocationQuery } from \"../Services/shopServices\";\r\n\r\nconst ListAddress = ({ navigation }) => {\r\n    const { location, localId } = useSelector((state) => state.userReducer.value);\r\n    const {data:userLocationQuery, isError, isLoading} = useGetUserLocationQuery(localId)\r\n    useEffect(() => {\r\n        console.log(userLocationQuery)\r\n    }, []);\r\n\r\n    return location?.latitude || userLocationQuery ? (\r\n          <AddressItem \r\n        location={location?.latitude ? location: userLocationQuery}\r\n        navigation={navigation} /> \r\n    ) : (\r\n        <View style = {styles.container}>\r\n             \r\n             <Text style={styles.text}>No location set</Text>\r\n            <AddButton\r\n                title=\"Set location\"\r\n                onPress={() => navigation.navigate(\"Location Selector\")}\r\n            />\r\n        </View>\r\n    );\r\n  \r\n};\r\n\r\nexport default ListAddress;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        paddingVertical: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    },\r\n    text2: {\r\n        paddingLeft: \"45%\",\r\n        paddingVertical: 20,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 18\r\n    }\r\n});"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,SAASC,uBAAuB;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7B,IAAAC,YAAA,GAA8BX,WAAW,CAAC,UAACY,KAAK;MAAA,OAAKA,KAAK,CAACC,WAAW,CAACC,KAAK;IAAA,EAAC;IAArEC,QAAQ,GAAAJ,YAAA,CAARI,QAAQ;IAAEC,OAAO,GAAAL,YAAA,CAAPK,OAAO;EACzB,IAAAC,qBAAA,GAAqDd,uBAAuB,CAACa,OAAO,CAAC;IAAzEE,iBAAiB,GAAAD,qBAAA,CAAtBE,IAAI;IAAoBC,OAAO,GAAAH,qBAAA,CAAPG,OAAO;IAAEC,SAAS,GAAAJ,qBAAA,CAATI,SAAS;EACjDC,SAAS,CAAC,YAAM;IACZC,OAAO,CAACC,GAAG,CAACN,iBAAiB,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,QAAQ,YAARA,QAAQ,CAAEU,QAAQ,IAAIP,iBAAiB,GACxCb,IAAA,CAACH,WAAW;IACda,QAAQ,EAAEA,QAAQ,YAARA,QAAQ,CAAEU,QAAQ,GAAGV,QAAQ,GAAEG,iBAAkB;IAC3DR,UAAU,EAAEA;EAAW,CAAE,CAAC,GAE1BH,KAAA,CAACmB,IAAI;IAACC,KAAK,EAAIC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE3BzB,IAAA,CAAC0B,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,IAAK;MAAAF,QAAA,EAAC;IAAe,CAAM,CAAC,EACjDzB,IAAA,CAACJ,SAAS;MACNgC,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMxB,UAAU,CAACyB,QAAQ,CAAC,mBAAmB,CAAC;MAAA;IAAC,CAC3D,CAAC;EAAA,CACA,CACT;AAEL,CAAC;AAED,eAAe3B,WAAW;AAE1B,IAAMoB,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE;EAChB,CAAC;EACDP,IAAI,EAAE;IACFQ,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IACHC,WAAW,EAAE,KAAK;IAClBJ,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}