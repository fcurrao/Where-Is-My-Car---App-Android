{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { colors } from \"../Global/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar InputForm = function InputForm(_ref) {\n  var label = _ref.label,\n    onChange = _ref.onChange,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? \"\" : _ref$error,\n    _ref$isSecure = _ref.isSecure,\n    isSecure = _ref$isSecure === void 0 ? false : _ref$isSecure;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    input = _useState2[0],\n    setInput = _useState2[1];\n  var onChangeText = function onChangeText(text) {\n    setInput(text);\n    onChange(text);\n  };\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [_jsx(Text, {\n      style: styles.subtitle,\n      children: label\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: input,\n      onChangeText: onChangeText,\n      secureTextEntry: isSecure\n    }), error ? _jsx(Text, {\n      style: styles.error,\n      children: error\n    }) : null]\n  });\n};\nexport default InputForm;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    width: '100%'\n  },\n  subtitle: {\n    width: '90%',\n    fontSize: 16,\n    fontFamily: 'Josefin'\n  },\n  error: {\n    fontSize: 16,\n    color: 'red',\n    fontFamily: 'Josefin',\n    fontStyle: 'italic'\n  },\n  input: {\n    width: '90%',\n    borderWidth: 0,\n    borderBottomWidth: 3,\n    borderBottomColor: colors.peach,\n    padding: 2,\n    fontFamily: 'Josefin',\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["React","useState","colors","jsx","_jsx","jsxs","_jsxs","InputForm","_ref","label","onChange","_ref$error","error","_ref$isSecure","isSecure","_useState","_useState2","_slicedToArray","input","setInput","onChangeText","text","View","style","styles","inputContainer","children","Text","subtitle","TextInput","value","secureTextEntry","StyleSheet","create","flexDirection","justifyContent","alignItems","width","fontSize","fontFamily","color","fontStyle","borderWidth","borderBottomWidth","borderBottomColor","peach","padding"],"sources":["C:/Users/federico.currao/Desktop/OtrosFC/mycar/Where-Is-My-Car---App-Android/src/Components/InputForm.jsx"],"sourcesContent":["import { StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { colors } from '../Global/Colors';\r\n\r\nconst InputForm = ({\r\n    label, \r\n    onChange, \r\n    error = \"\",\r\n    isSecure = false\r\n}) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const onChangeText = (text) => {\r\n        setInput(text)\r\n        onChange(text)\r\n    }\r\n  return (\r\n    <View style={styles.inputContainer}>\r\n      <Text style={styles.subtitle}>{label}</Text>\r\n      <TextInput\r\n        style ={styles.input}\r\n        value={input}\r\n        onChangeText={onChangeText}\r\n        secureTextEntry={isSecure}\r\n      />\r\n      {error ? \r\n        <Text style = {styles.error}>\r\n            {error}\r\n        </Text>\r\n        :\r\n        null\r\n    }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default InputForm\r\n\r\nconst styles = StyleSheet.create({\r\n    inputContainer: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        width: '100%'\r\n    },\r\n    subtitle: {\r\n        width: '90%',\r\n        fontSize: 16,\r\n        fontFamily: 'Josefin'\r\n    },\r\n    error: {\r\n        fontSize: 16,\r\n        color: 'red',\r\n        fontFamily: 'Josefin',\r\n        fontStyle: 'italic',\r\n    },\r\n    input: {\r\n        width: '90%',\r\n        borderWidth: 0,\r\n        borderBottomWidth: 3,\r\n        borderBottomColor: colors.peach,\r\n        padding: 2,\r\n        fontFamily: 'Josefin',\r\n        fontSize: 14,\r\n    }\r\n})"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAKT;EAAA,IAJFC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAAC,UAAA,GAAAH,IAAA,CACRI,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,EAAE,GAAAA,UAAA;IAAAE,aAAA,GAAAL,IAAA,CACVM,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;EAEhB,IAAAE,SAAA,GAA0Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAK;IAC3BF,QAAQ,CAACE,IAAI,CAAC;IACdX,QAAQ,CAACW,IAAI,CAAC;EAClB,CAAC;EACH,OACEf,KAAA,CAACgB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,GACjCtB,IAAA,CAACuB,IAAI;MAACJ,KAAK,EAAEC,MAAM,CAACI,QAAS;MAAAF,QAAA,EAAEjB;IAAK,CAAO,CAAC,EAC5CL,IAAA,CAACyB,SAAS;MACRN,KAAK,EAAGC,MAAM,CAACN,KAAM;MACrBY,KAAK,EAAEZ,KAAM;MACbE,YAAY,EAAEA,YAAa;MAC3BW,eAAe,EAAEjB;IAAS,CAC3B,CAAC,EACDF,KAAK,GACJR,IAAA,CAACuB,IAAI;MAACJ,KAAK,EAAIC,MAAM,CAACZ,KAAM;MAAAc,QAAA,EACvBd;IAAK,CACJ,CAAC,GAEP,IAAI;EAAA,CAEF,CAAC;AAEX,CAAC;AAED,eAAeL,SAAS;AAExB,IAAMiB,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC7BR,cAAc,EAAE;IACZS,aAAa,EAAE,QAAQ;IACvBC,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE;EACX,CAAC;EACDT,QAAQ,EAAE;IACNS,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB,CAAC;EACD3B,KAAK,EAAE;IACH0B,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,KAAK;IACZD,UAAU,EAAE,SAAS;IACrBE,SAAS,EAAE;EACf,CAAC;EACDvB,KAAK,EAAE;IACHmB,KAAK,EAAE,KAAK;IACZK,WAAW,EAAE,CAAC;IACdC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE1C,MAAM,CAAC2C,KAAK;IAC/BC,OAAO,EAAE,CAAC;IACVP,UAAU,EAAE,SAAS;IACrBD,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}